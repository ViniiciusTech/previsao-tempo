# -*- coding: utf-8 -*-
"""Clima.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1q-K6UC1yFJpaBypZxoxkq2M_ZIsTtyQ_
"""

import requests
import pandas as pd
import matplotlib.pyplot as plt

# Sua chave API do OpenWeatherMap
API_KEY = "4ca4c6155833d06c0b1925733eb4074a"


# Lista de cidades para consultar (pode adicionar mais)
cidades = ["São Paulo", "Rio de Janeiro", "Belo Horizonte"]

# Base da URL para previsão 5 dias / 3 horas
url_base = "http://api.openweathermap.org/data/2.5/forecast"

# Lista para armazenar todos os dados
todos_dados = []

for cidade in cidades:
    # Parâmetros para a API: cidade, unidade métrica (Celsius), idioma, chave
    params = {
        "q": cidade,
        "appid": API_KEY,
        "units": "metric",
        "lang": "pt_br"
    }

    # Faz a requisição GET
    resposta = requests.get(url_base, params=params)
    dados = resposta.json()

    # Confere se retornou dados corretamente
    if resposta.status_code != 200:
        print(f"Erro ao consultar dados para {cidade}: {dados.get('message')}")
        continue

    # Cada previsão vem num intervalo de 3 horas - vamos extrair data, temperatura, condição etc.
    for previsao in dados['list']:
        # Extrai as informações que queremos
        registro = {
            "cidade": cidade,
            "data_hora": previsao['dt_txt'],                      # data e hora da previsão
            "temperatura": previsao['main']['temp'],              # temperatura em Celsius
            "umidade": previsao['main']['humidity'],              # umidade em %
            "descricao": previsao['weather'][0]['description']    # descrição do tempo
        }
        todos_dados.append(registro)

# Cria DataFrame pandas com todos os dados coletados
df = pd.DataFrame(todos_dados)

# Converte coluna de data para tipo datetime para facilitar análises
df['data_hora'] = pd.to_datetime(df['data_hora'])

# Cria coluna só com a data (sem hora) para agrupar por dia
df['data'] = df['data_hora'].dt.date

# Calcula temperatura média diária por cidade
media_temp_dia = df.groupby(['cidade', 'data'])['temperatura'].mean().reset_index()

print("Temperatura média diária por cidade:")
print(media_temp_dia)

# --- Gráfico de temperatura média diária para cada cidade ---
plt.figure(figsize=(12, 6))

for cidade in cidades:
    dados_cidade = media_temp_dia[media_temp_dia['cidade'] == cidade]
    plt.plot(dados_cidade['data'], dados_cidade['temperatura'], marker='o', label=cidade)

plt.title('Temperatura Média Diária - Próximos 5 dias')
plt.xlabel('Data')
plt.ylabel('Temperatura (°C)')
plt.legend()
plt.grid(True)
plt.xticks(rotation=45)
plt.tight_layout()
plt.show()